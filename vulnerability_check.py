import requests

def check_vulnerabilities(dependency_name, version):
    # URL of the vulnerability database API
    api_url = f"https://vuldb.com/?api&software={dependency_name}&version={version}"

    try:
        # Send a GET request to the API
        response = requests.get(api_url)

        # Check if the request was successful (status code 200)
        if response.status_code == 200:
            try:
                # Parse the response as JSON
                vulnerability_data = response.json()

                # Check if the vulnerability data is a list
                if isinstance(vulnerability_data, list):
                    if vulnerability_data:
                        # Process the vulnerability data
                        for vulnerability in vulnerability_data:
                            print("Vulnerability Found:")
                            print("CVE ID:", vulnerability.get("cve_id"))
                            print("Description:", vulnerability.get("description"))
                            print("Severity:", vulnerability.get("severity"))
                    else:
                        print("No vulnerabilities found for this dependency.")
                else:
                    print("Invalid response format from the API." + vulnerability_data)
            except ValueError:
                print("Response is not in valid JSON format.")
        else:
            print("Error:", response.status_code)
    except Exception as e:
        print("An error occurred:", str(e))

# Example usage
check_vulnerabilities("org.seleniumhq.selenium", "3.3")
